{
  "hash": "cd48457e938a1746a7fcf020cd6ebd9c",
  "result": {
    "markdown": "---\ntitle: 'Working with Qualtrics Data - Part 1: Importing Data'\nauthor:\n  - Jeffrey Stevens\ndate: '2022-08-02'\ncategories: \n  - coding\n  - R package\ndescription: \"Use the qualtRics package to import Qualtrics data.\"\nexecute:\n  freeze: auto\n---\n\n\n_Note: Cross-posted with [rOpenSci blog](https://ropensci.org/blog/2022/08/02/working-with-qualtrics-data-importing/)._\n\nThe online survey system [Qualtrics](https://www.qualtrics.com/) can be a great way to collect data from research participants, customers, and stakeholders. I use it frequently to conduct research studies with participants or just to poll students and collaborators. However, while Qualtrics makes survey design straightforward, once the data are collected, there is a lot of work to do. \nFortunately, two R packages ([qualtRics](https://docs.ropensci.org/qualtRics/)[^1] and [excluder](https://docs.ropensci.org/excluder/)[^2]) can make importing data and excluding low-quality data easier. \n\nDiscovering the qualtRics package has saved me a lot of time importing data. It also lets me create data pipelines for sensitive data by reading files directly into R without saving them locally until they've been deidentified. This way I don't accidentally save personally identifiable information in a place that is not authorized for sensitive data. \n\nAfter importing data, there is often a lot of clean up that needs to happen, especially for online survey respondents. I developed the excluder package to help with removing data entries based on broad metadata such as response duration, respondent location, screen resolution, etc. Combining the qualtRics and excluder packages can help you deal with the tedious part of survey data and quickly get to the fun part of data analysis!\n\nPart 1 of this series will show you how to use qualtRics to import your data, and we'll cover excluding your data with excluder in [Part 2](/blog/2022/08/09/working-with-qualtrics-data-excluding/). \n\n## Importing Qualtrics data into R\n\nIf you've worked with Qualtrics data before, you know you have to log into Qualtrics, navigate to the data section, wait for all of the data to be \"re-indexed\" for viewing, choose whether to export as numeric or character values, choose what type of file to export, download the data file, find the downloaded data file, change the name of the file to something comprehensible, and delete those first two obnoxious rows of metadata. üòÆ‚Äçüí®\nHaving to go through this process manually every time that you want to download Qualtrics data can be cumbersome and time consuming.\n\n![](mouseclicking.gif){fig-alt=\"A gif of a hand furiously clicking a computer mouse.\" fig-align=\"center\"}\n\nSource: @corsairgaming at [Giphy](https://media.giphy.com/media/443u3QvEVYcvcHJVdQ/giphy.gif)\n\nEnter, the [qualtRics](https://docs.ropensci.org/qualtRics/) package from [Julia Silge](https://juliasilge.com/) and [Jasper Ginn](https://jasperhg90.github.io/)[^3]. \nThis package allows you to use the Qualtrics API to directly connect to your survey data. \nYou can download a list of surveys in your account, as well as the actual questions and metadata about those questions. But, most importantly, the qualtRics package allows you to download Qualtrics data into your R session. \nTherefore, you can write scripts that automatically import your Qualtrics data whenever you run your script. \nNo more time wasted downloading manually!\n\n### Connecting to Qualtrics\n\nOf course, to get your data, you have to have access to your Qualtrics account. \nThe [Qualtrics API](https://api.qualtrics.com/) allows you to connect to your Qualtrics account with your personal API token (or key) and your datacenter ID. \nYou can [find your API token](https://api.qualtrics.com/ZG9jOjg3NjYzMg-api-key-authentication) by logging into Qualtrics, going to _Account Settings_, selecting the _Qualtrics IDs_ tab, finding the _API_ box, clicking _Generate Token_, and copying the long string of random letters and numbers shown next to _Token_. \nNote this key is like your password for accessing your account, so don't share it with others. ü§´\n\n![](qualtrics_api_token.png){fig-alt=\"An image of the Qualtrics ID page with an example token in the API box highlighted with a red rectangle.\" fig-align=\"center\" width=\"800\"}\n\nSource: [Qualtrics API Documentation](https://api.qualtrics.com/ZG9jOjg3NjYzMg-api-key-authentication)\n\nFor your datacenter ID, follow the same procedure but look in the _User_ box of the _Qualtrics ID_ page and grab the _Datacenter ID_.\n\n\n![](qualtrics_api_datacenter.png){fig-alt=\"An image of the User box from the Qualtrics ID page with an example User ID, Organization ID, and Datacenter ID.\" fig-align=\"center\" width=\"400\"}\n\nSource: [Qualtrics API Documentation](https://api.qualtrics.com/ZG9jOjg3NjYzMw-base-url-and-datacenter-i-ds)\n\nYour datacenter ID can now be appended before `qualtrics.com` to generate your base URL: `yourdatacenterid.qualtrics.com` (don't include `https://`). \nYou can use the qualtRics function `qualtrics_api_credentials()` to connect your R session to the Qualtrics API.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(qualtRics)\n\nqualtrics_api_credentials(api_key = \"<YOUR-QUALTRICS_API_TOKEN>\", \n                          base_url = \"<YOUR-QUALTRICS_BASE_URL>\")\n```\n:::\n\n\nNow your R session should have access to your Qualtrics account. \nBut if you start a new R session, you'll have to rerun this command. \nAnd it is not recommended to save this command in an R script because, if you send the script to someone else or post it publicly in a repository, you are granting access to your Qualtrics account to other people. üò¨\n\nTo avoid having to rerun the command, you can store your API token and base URL on your local computer by using `install = TRUE`. \nIncluding this argument will save the API token and base URL information in your `.Renviron` file, which is read when starting every new R session.\n\n::: {.cell}\n\n```{.r .cell-code}\nqualtrics_api_credentials(api_key = \"<YOUR-QUALTRICS_API_TOKEN>\", \n                          base_url = \"<YOUR-QUALTRICS_BASE_URL>\",\n                          install = TRUE)\n```\n:::\n\n\nNow you'll either need to restart your R session or reload your environment with `readRenviron(\"~/.Renviron\")` to make the credentials accessible in the current R session.\n\nIf you use `install = TRUE`, this means that your credentials are stored in a plain text file on your computer. \nSo this may not be something that you want to do on a shared computer account. \nYou must decide between the security of not storing credentials on your computer and the convenience of not having to enter your credentials for every new R session. ‚öñÔ∏è\n\n![](security_convenience.jpg){fig-alt=\"Meme with hand hovering over two red buttons, one reading Security and the other reading Convenience.\" fig-align=\"center\" width=\"400\"}\n\nSource: Jeffrey Stevens built in [Meme Generator](https://imgflip.com/meme/Two-Buttons)\n\nCongrats---you've now registered your Qualtrics credentials! üéâ\nIf you have difficulty with this, check out the qualtRics  [documentation](https://docs.ropensci.org/qualtRics/articles/qualtRics.html#registering-your-qualtrics-credentials) or [GitHub issues](https://github.com/ropensci/qualtRics/issues), or the [Qualtrics API documentation](https://api.qualtrics.com/). \nIf you have multiple Qualtrics accounts that you want you use, you'll have to get creative about how you [set up your API tokens](https://github.com/ropensci/qualtRics/issues/110).\n\n\n### Listing your surveys\n\nNow that you've connected to your Qualtrics account, one of the first things you may want to do is list the surveys that you have in your account. \nWhile you can do this by hand through the Qualtrics website, you can also download a list of all surveys as a data frame with [`all_surveys()`](https://docs.ropensci.org/qualtRics/reference/all_surveys.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurveys <- all_surveys() \n```\n:::\n\n\nYou can then view data frame to find the survey that you want.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(surveys)\n```\n:::\n\n\n![](qualtrics_surveys.png){fig-alt=\"An image of a data frame that is the output of the all_surveys function with columns id, name, ownerID, lastModified, creationDate, and isActive.\" fig-align=\"center\" width=\"800\"}\n\nSource: Jeffrey Stevens\"\n\nThe `id` column lists the survey ID for each survey (starting with `SV_`). \nThis is a unique identifier that Qualtrics uses to label each survey. \nYou will need the survey ID to download or work with it, so make sure to copy it from the data frame.\n\n\n\n### Importing surveys\n\nNow that we know which survey we want, we can import it using [`fetch_survey()`](https://docs.ropensci.org/qualtRics/reference/fetch_survey.html) and the survey ID.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmysurvey <- fetch_survey(surveyID = \"SV_XXXXXXXXXX\")\n```\n:::\n\n\nThis imports the survey as a data frame. The `fetch_survey()` function has many arguments that are helpful in importing your data. \nHere are just a few:\n\n* Set your time zone with `time_zone`. \nThis is important because, if you don't set it in your Account Settings, Qualtrics has a default time zone that may differ from your own.\n\n* Extract entries during a particular time period with `start_date` and/or `end_date`.\n\n* Import only certain questions with `include_questions`.\n\n* Control whether you import choice text or numeric data with `label`.\n\n* Let the function try to guess the proper data types for your columns with `convert` or specify the data types with `col_types`.\n\n* Save your data frame locally with the `save_dir` argument. \nNote it saves the file as an RDS file, so you'll need something like [`readRDS()`](https://rdrr.io/r/base/readRDS.html) to read it.\n\nFind out more about this function in the [`fetch_survey()` documentation](https://docs.ropensci.org/qualtRics/reference/fetch_survey.html).\n\n`fetch_survey()` allows you to automatically import your Qualtrics surveys directly---no more messy and time-consuming downloads! \nBut if you've already downloaded a file from Qualtrics, you can use qualtRics' [`read_survey()`](https://docs.ropensci.org/qualtRics/reference/read_survey.html) function to import that file and clean up some Qualtrics messiness like removing those first two obnoxious rows and allowing control over the time zone and column data types.\n\n### Viewing survey info\n\nWhile `fetch_survey()` provides the core functionality of the qualtRics package, the package also includes some other helper functions that allow you to view information about your survey.\n\nYou can get a data frame that includes all survey questions and their IDs and names with [`survey_questions()`](https://docs.ropensci.org/qualtRics/reference/survey_questions.html). \nTo really drill down into your survey, use the [`metadata()`](https://docs.ropensci.org/qualtRics/reference/metadata.html) function. \nNot only can you access general metadata about your survey (survey name, owner ID, organization ID, creation/modification dates), but you can get more detailed information about your questions (question labels, question type, response option descriptions), block information, and survey flow. \nYou can access information about the survey distribution, mailing lists, etc. with other functions. \nIt's definitely worth exploring all of the [helper functions](https://docs.ropensci.org/qualtRics/reference/index.html).\n\n\n## Next steps\n\nYou have learned a quick and easy way to automatically download your Qualtrics data with the qualtRics package. üòé\nNow what do you do with it? \nWell, if you're collecting online surveys, you may have a lot of problematic data that you want to remove. \nCheck out [Part 2: Excluding Data](/blog/2022/08/09/working-with-qualtrics-data-excluding/) to find out how to exclude data with the [excluder](https://docs.ropensci.org/excluder/) package.\n\n\n[^1]: Ginn J, Silge J (2022). qualtRics: Download 'Qualtrics' Survey Data. R package version 3.1.6,\n  https://CRAN.R-project.org/package=qualtRics\n[^2]: Stevens, J. R. (2021). excluder: An R package that checks for exclusion criteria in online data. _Journal of Open Source Software_, 6(67), 3893. <https://doi.org/10.21105/joss.03893>\n[^3]: Many thanks to Julia Silge and Jasper Ginn for creating a wonderful package and providing the [documentation](https://docs.ropensci.org/qualtRics/) and [vignette](https://docs.ropensci.org/qualtRics/articles/qualtRics.html) on which this post was based! Also, check out Julia's blog post about [relaunching the qualtRics package](/blog/2019/04/30/qualtrics-relaunch/).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}